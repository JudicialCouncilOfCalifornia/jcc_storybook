/*
  Learn it: https://every-layout.dev
*/

* {
  box-sizing: border-box;
  /* Margin and padding are managed by layout primitives. */
  margin: 0;
  padding: 0;
}

/* Box. */
.box {
  padding: var(--s1);
}

/* Center. */
.center {
  box-sizing: content-box;
  margin-inline: auto;
  max-inline-size: var(--measure);
  display: flex;
  flex-direction: column;
  align-items: var(--align-items, flex-start);
}

/* Cluster. */
.cluster {
  display: flex;
  flex-wrap: wrap;
  gap: var(--gap, 1rem);
  justify-content: flex-start;
  align-items: center;
}

/* Container */
.container {
  box-sizing: content-box;
  margin-inline: auto;
  inline-size: 100%;
  max-inline-size: var(--max-width);
}

/* Cover. */
.cover {
  display: flex;
  flex-direction: column;
  min-block-size: var(--cover-height, 100vh);
  padding: var(--cover-padding, var(--s0));
}

.cover > * {
  margin-block: var(--gap, var(--s0));
}

.cover > :first-child:not(.principal) {
  margin-block-start: 0;
}

.cover > :last-child:not(.principal) {
  margin-block-end: 0;
}

.cover > .principal {
  margin-block: auto;
}

/* Frame. */
.frame {
  aspect-ratio: var(--frame-h, 16) / var(--frame-v, 9);
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
}

.frame > img,
.frame > video {
  inline-size: 100%;
  block-size: 100%;
  object-fit: cover;
}

/* Grid. */
.grid {
  display: grid;
  grid-gap: var(--gap, var(--s0));
}

@supports (width: min(var(--grid-min-width, 20ch), 100%)) {
  .grid {
    grid-template-columns: repeat(
      auto-fit,
      minmax(min(var(--grid-min-width, 20ch), 100%), 1fr)
    );
  }
}

/* Icon. */
.icon {
  width: clamp(2rem, 100%, 4rem);
  height: clamp(2rem, 100%, 4rem);
}

.with-icon {
  display: inline-flex;
  align-items: baseline;
}

.with-icon .icon {
  margin-inline-end: var(--gap, 1rem);
}

/* Imposter. */
.imposter {
  position: var(--positioning, absolute);
  inset-block-start: 50%;
  inset-inline-start: 50%;
  transform: translate(-50%, -50%);
}

.imposter.contain {
  --margin: 0px;
  overflow: auto;
  max-inline-size: calc(100% - (var(--margin) * 2));
  max-block-size: calc(100% - (var(--margin) * 2));
}

/* Reel. */
.reel {
  display: flex;
  block-size: auto;
  overflow-x: auto;
  overflow-y: hidden;
  scrollbar-color: #fff #000;
  /* Affordance */
  background:
    /* Shadow covers */ linear-gradient(
      90deg,
      white 50%,
      rgba(255, 255, 255, 0)
    ),
    linear-gradient(90deg, rgba(255, 255, 255, 0), white 50%) 0 100%,
    /* Shadows */
      radial-gradient(
        farthest-side at 0% 50%,
        rgba(0, 0, 0, 0.2),
        rgba(0, 0, 0, 0)
      ),
    radial-gradient(
        farthest-side at 100% 50%,
        rgba(0, 0, 0, 0.2),
        rgba(0, 0, 0, 0)
      )
      0 100%;
  background-repeat: no-repeat;
  background-color: white;
  background-position: left, right;
  background-size: 75px 200%, 75px 200%, 40px 200%, 40px 200%;
  background-attachment: local, local, scroll, scroll;
}

.reel::-webkit-scrollbar {
  block-size: 1rem;
}

.reel::-webkit-scrollbar-track {
  background-color: #000;
}

.reel::-webkit-scrollbar-thumb {
  background-color: #000;
  background-image: linear-gradient(
    #000 0,
    #000 0.25rem,
    #fff 0.25rem,
    #fff 0.75rem,
    #000 0.75rem
  );
}

.reel > * {
  flex: 0 0 auto;
}

.reel > img {
  block-size: 100%;
  flex-basis: auto;
  width: auto;
}

.reel > * + * {
  margin-inline-start: var(--gap, 1rem);
}

.reel.overflowing {
  padding-block-end: var(--s-3);
}

.reel + .reel-hint {
  display: none;
}

.reel.overflowing + .reel-hint {
  display: block;
}

/* â†“ Hide scrollbar with `no-bar` class */
.reel.no-bar {
  scrollbar-width: none;
}

.reel.no-bar::-webkit-scrollbar {
  display: none;
}

/* Sidebar. */
.with-sidebar {
  display: flex;
  flex-wrap: wrap;
  flex-direction: var(--sidebar-direction, "row");
  gap: var(--gap, var(--s1));
}


.with-sidebar > :first-child {
  flex-basis: var(--sidebar-width, 20ch);
  flex-grow: 1;
}

.with-sidebar > :last-child {
  flex-basis: 0;
  flex-grow: 999;
  min-inline-size: 50%;
}

/* Stack. */
.stack {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: var(--align-items, flex-start);
}

.min-width-layout {
  width: min(100%, 81ch);
}

.stack > * {
  margin-block: 0;
  inline-size: 100%;
}

.stack > * + * {
  margin-block-start: var(--gap, 1.5rem);
}

.stack > * + *.stack__no-space {
  margin-block-start: 0;
}

.stack > * + *.stack__xs-space {
  margin-block-start: var(--s-5);
}

.stack > * + *.stack__sm-space {
  margin-block-start: var(--s-2);
}

.stack > * + *.stack__md-space {
  margin-block-start: var(--s1);
}

.stack > * + *.stack__lg-space {
  margin-block-start: var(--s4);
}

.stack > * + *.stack__xl-space {
  margin-block-start: var(--s6);
}

/* Switcher. */
.switcher {
  --measure: 80ch;
  display: flex;
  flex-wrap: wrap;
  gap: var(--gap, var(--s1));
}

.switcher > * {
  flex-grow: 1;
  flex-basis: calc((var(--measure) - 100%) * 999);
}

.switcher.switcher--3 > :nth-last-child(n + 4),
.switcher.switcher--3 > :nth-last-child(n + 4) ~ * {
  flex-basis: 100%;
}

.switcher.switcher--4 > :nth-last-child(n + 5),
.switcher.switcher--4 > :nth-last-child(n + 5) ~ * {
  flex-basis: 100%;
}

/*
  END: https://every-layout.dev
*/

/* Fixed. */
.fixed {
  position: fixed;
  z-index: 9999;
  bottom: 0;
  padding: var(--s0);
}

.fixed,
.fixed--right {
  right: 0;
}

.fixed--left {
  right: unset;
}

.word-wrap {
  overflow-wrap: break-word;  
}