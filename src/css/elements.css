html {
  --font-size: 18px;
  --line-height: var(--s3);
  font-family: var(--font-secondary);
  font-size: var(--font-size, var(--s0));
  line-height: var(--line-height, var(--s3));
  font-family: var(--font-secondary);
  font-weight: 400;
  letter-spacing: .01rem;
}

body {
  margin: 0;
}

h1, h2, h3, h4, h5 {
  margin: 0;
  font-family: var(--font-primary);
  font-weight: 400;
  color: var(--heading-color, inherit);
}

h1 {
  font-size: var(--s4);
  line-height: var(--s5);
}

h2 {
  font-size: var(--s3);
  line-height: var(--s4);
}

h3 {
  font-size: var(--s2);
  line-height: var(--s3);
}

h4 {
  font-size: var(--s1);
  line-height: var(--s2);
}

h5 {
  font-size: var(--s0);
  line-height: var(--s1);
}

a {
  color: var(--color-primary-light-x);
}

p {
  margin: 0;
  color: var(--color);
}

p + p {
  margin-block-start: var(--s0);
}

:where(p, h2, h3, h4, h5, h6) + h2,
:where(p, h2, h3, h4, h5, h6) + h3,
:where(p, h2, h3, h4, h5, h6) + h4,
:where(p, h2, h3, h4, h5, h6) + h5,
:where(p, h2, h3, h4, h5, h6) + h6 {
  margin-block-start: var(--gap, 1.5rem);
}

:where(p, h2, h3, h4, h5, h6) + p {
  margin-top: var(--s0);
}

ul,
ol {
  padding-inline: var(--s2);
}

img {
  max-inline-size: 100%;
}

code {
  border: 1px solid #aaa;
  background: #eee;
  padding: var(--s-5);
  color: #000;
}

.caption {
  font-size: var(--s-1);
  line-height: var(--s0);
  padding: var(--s0) var(--s1);
}

.accent {
  color: var(--accent-color);
}

table {
  border-collapse: collapse;
}

table td,
table th {
  border: 1px solid var(--color-base-light-x);;
  padding: var(--s-2) var(--s-2);
}

table th {
  color: var(--color-white);
  background-color: var(--color-base-dark-x);
  text-align: left;
}

hr {
  border: 0;
  border-block-end: 1px solid var(--color-base-light-x);
}

dl dd + dt {
  margin-block-start: var(--s0);
}

dt, dfn {
  font-weight: 600;
}

dd {
  margin-inline-start: var(--s1);
}

/* Legal formatting of Ordered lists. See @LegalFormatting component */
@counter-style legal_decimal {
  system: extends decimal;
  prefix: '(';
  suffix: ')  ';
}

@counter-style legal_upper_roman {
  system: extends upper-roman;
  prefix: '(';
  suffix: ')  ';
}

@counter-style legal_upper_alpha {
  system: extends upper-alpha;
  prefix: '(';
  suffix: ')  ';
}

@counter-style legal_lower_roman {
  system: extends lower-roman;
  prefix: '(';
  suffix: ')  ';
}

@counter-style legal_lower_alpha {
  system: extends lower-alpha;
  prefix: '(';
  suffix: ')  ';
}

@counter-style legal_decimal_leading_zero {
  system: extends decimal-leading-zero;
  prefix: '(';
  suffix: ')  ';
}

ol.legal {
  counter-reset: list;
  list-style: legal_decimal;
}

ol.legal, ol.legal ol {
  padding-inline: var(--s2);
}

ol.legal li + li {
  margin-block-start: var(--s-6);
}

ol.legal li + li > ol,
ol.legal li + li > ul {
  margin-block: var(--s1);
}

ol.legal li::marker {
  font-weight: 600;
}

ol.legal li li li li li ol > li {
  list-style: legal_upper_roman;
}

ol.legal li li li li ol > li {
  list-style: legal_upper_alpha;
}

ol.legal li li li ol > li {
  list-style: legal_decimal_leading_zero;
}

ol.legal li li ol > li {
  list-style: legal_lower_roman;
}

ol.legal li ol > li {
  list-style: legal_decimal;
}

ol.legal > li {
  list-style: legal_lower_alpha;
}

/* Legal formatting of Unordered lists. See @LegalFormatting component */
ol.legal ul > li ul > li ul > li {
  list-style-type: square;
}

ol.legal ul > li ul > li {
  list-style-type: circle;
}

ol.legal li ul > li,
ol.legal ul > li {
  list-style-type: disc;
}

/* Screen Reader Only */
.sr-only {
  position: absolute;
  left: -999em;
  right: auto;
}

[dir='rtl'] .sr-only {
  position: absolute;
  right: -999em;
  left: auto;
}

.page__tabs {
  box-shadow: inset 4px 4px 10px 2px hsla(0,0%,66.7%,.2);
}